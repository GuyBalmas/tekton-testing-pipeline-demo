apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: tests-results
  namespace: default
spec:
  params:
    - name: aggregateTasksStatus
      type: string
    - name: technology
      type: string

  workspaces:
    - name: shared-data
  steps:
    - image: ubuntu
      workingDir: $(workspaces.shared-data.path)
      name: summary
      script: |
        #!/usr/bin/env bash
        echo ">>> Tests-Results"
        ls
        echo -e ">>> Params:\naggregateTasksStatus = $(params.aggregateTasksStatus)\ntechnology = $(params.technology)"
        echo "Unit-Tests results: $(cat unit-tests.result)"
        echo "Lint-Tests results: $(cat lint-tests.result)"
        if [[ $(params.aggregateTasksStatus) == "Succeeded" || $(params.aggregateTasksStatus) == "Completed"  ]]
        then
          echo "######################## Passed Testing Pipeline! ########################"
          exit 0
        else
          echo "######################## Failed Testing Pipeline! ########################"
          if [[ $(cat unit-tests.result) != "passed" ]]
          then
            echo "You have failed Unit-Tests, please check your code!"
          elif [[ $(cat lint-tests.result) != "passed" ]]
          then
            echo "You have failed Lint-Tests, please check your code!"
          else
            echo "You have failed Unit-Tests and Lint-Tests, please check your code!"
          fi
          exit 1
        fi
        exit 2

    - image: ubuntu
      workingDir: $(workspaces.shared-data.path)
      name: total-run-time
      script: |
        #!/usr/bin/env bash
        diff=$(date -d "$(cat start.time)" +%s)
        now=$(date +%s)
        echo $((now-diff)) | awk '{print int($1/60/60/24) " days, " int($1/60/60%24) " hours, " int($1/60%60) " minutes, " int($1%60) " seconds"}'
        exit 0
        
        # DURATION=$(curl  http://tekton-pipelines-controller.tekton-pipelines.svc.cluster.local:9090/metrics | grep tekton_pipelines_controller_pipelinerun_duration_seconds_sum | head -n 1 | grep -oE '[0-9]+')
        # echo "Pipeline Duration: $DURATION seconds"